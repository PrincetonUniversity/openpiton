// Modified by Princeton University on June 9th, 2015
// ========== Copyright Header Begin ==========================================
//
// OpenSPARC T1 Processor File: manycore.config
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
//
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
//
// The above named program is distributed in the hope that it will be
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
//
// ========== Copyright Header End ============================================
// 1 core without I/O testbench config file for sims

<manycore>
    -model=manycore
    -flist=$DV_ROOT/design/include/Flist.include
    -flist=$DV_ROOT/design/common/rtl/Flist.common
    -flist=$DV_ROOT/design/chipset/include/Flist.include
    -flist=$DV_ROOT/design/rtl/Flist.system
    -flist=$DV_ROOT/design/chip/rtl/Flist.chip
    -flist=$DV_ROOT/design/chip/pll/rtl/Flist.pll
    -flist=$DV_ROOT/design/chip/jtag/rtl/Flist.jtag
    -flist=$DV_ROOT/design/chip/tile/rtl/Flist.tile
    -flist=$DV_ROOT/design/chip/tile/rtap/rtl/Flist.rtap
    -flist=$DV_ROOT/design/chip/tile/l15/rtl/Flist.l15
    -flist=$DV_ROOT/design/chip/tile/fpu/rtl/Flist.fpu
    -flist=$DV_ROOT/design/chip/tile/sparc/rtl/Flist.sparc_top
    -flist=$DV_ROOT/design/chip/tile/sparc/ifu/rtl/Flist.ifu
    -flist=$DV_ROOT/design/chip/tile/sparc/lsu/rtl/Flist.lsu
    -flist=$DV_ROOT/design/chip/tile/sparc/tlu/rtl/Flist.tlu
    -flist=$DV_ROOT/design/chip/tile/sparc/spu/rtl/Flist.spu
    -flist=$DV_ROOT/design/chip/tile/sparc/ffu/rtl/Flist.ffu
    -flist=$DV_ROOT/design/chip/tile/sparc/exu/rtl/Flist.exu
    -flist=$DV_ROOT/design/chip/tile/sparc/exu/bw_r_irf/rtl/Flist.bw_r_irf
    -flist=$DV_ROOT/design/chip/tile/sparc/exu/bw_r_irf/common/rtl/Flist.bw_r_irf_common
    -flist=$DV_ROOT/design/chip/tile/sparc/exu/bw_r_irf/bw_r_irf_register8/rtl/Flist.bw_r_irf_register8
    -flist=$DV_ROOT/design/chip/tile/sparc/exu/bw_r_irf/bw_r_irf_register16/rtl/Flist.bw_r_irf_register16
    -flist=$DV_ROOT/design/chip/tile/sparc/mul/rtl/Flist.mul
    -flist=$DV_ROOT/design/chip/tile/sparc/srams/rtl/Flist.srams
    -flist=$DV_ROOT/design/chip/tile/sparc/rtl/Flist.sparc_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.clib_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.dlib_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.dft_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.ucb_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.sw_mem_common
    -flist=$DV_ROOT/design/chip/tile/common/rtl/Flist.network_common
    -flist=$DV_ROOT/design/chip/tile/common/srams/rtl/Flist.srams_common
    // dmbr
    -flist=$DV_ROOT/design/chip/tile/dmbr/rtl/Flist.dmbr
    // dynamic network
    -flist=$DV_ROOT/design/chip/tile/dynamic_node/rtl/Flist.dynamic_node
    -flist=$DV_ROOT/design/chip/tile/dynamic_node/common/rtl/Flist.common
    -flist=$DV_ROOT/design/chip/tile/dynamic_node/components/rtl/Flist.components
    -flist=$DV_ROOT/design/chip/tile/dynamic_node/dynamic/rtl/Flist.dynamic
    -flist=$DV_ROOT/design/chip/tile/dynamic_node/sim/rtl/Flist.sim
    // l2
    -flist=$DV_ROOT/design/chip/tile/l2/rtl/Flist.l2
    -flist=$DV_ROOT/design/chipset/rtl/Flist.chipset
    -flist=$DV_ROOT/design/common/fpga_bridge/rtl/Flist.fpga_bridge
    -flist=$DV_ROOT/design/common/fpga_bridge/fpga_send/rtl/Flist.fpga_send
    -flist=$DV_ROOT/design/common/fpga_bridge/fpga_rcv/rtl/Flist.fpga_rcv
    -flist=$DV_ROOT/design/chip/chip_bridge/rtl/Flist.chip_bridge
    -flist=$DV_ROOT/verif/env/manycore/manycore.flist
    -flist=$DV_ROOT/verif/env/common/fake_mem_ctrl.flist
    -flist=$DV_ROOT/design/chipset/noc_axilite_bridge/rtl/Flist.noc_axilite_bridge
    -flist=$DV_ROOT/design/chipset/io_xbar/rtl/Flist.io_xbar
    -flist=$DV_ROOT/design/chipset/io_xbar/common/rtl/Flist.common
    -flist=$DV_ROOT/design/chipset/io_xbar/dynamic/rtl/Flist.dynamic
    -flist=$DV_ROOT/design/chipset/io_xbar/components/rtl/Flist.components
    -flist=$DV_ROOT/design/chipset/io_ctrl/rtl/Flist.io_ctrl
    //-flist=$DV_ROOT/design/chipset/mc/rtl/Flist.mc
    //axi_lite_slave_rf
    -flist=$DV_ROOT/design/chipset/axi_lite_slave_rf/rtl/Flist.axi_lite_slave_rf

    // No scan chains
    -config_rtl=NO_SCAN

    //-config_rtl=DEFAULT_NETTYPE_NONE 
    -config_rtl=RTL_SPARC0 // neccessary for some borrowed monitors

    // trin: set these flags to simulate FPGA memory blocks
    // -config_rtl=SIM_FPGA_SYN_SRAM_ICACHE_TAG 
    // -config_rtl=SIM_FPGA_SYN_SRAM_LSU_ICACHE 
    // -config_rtl=SIM_FPGA_SYN_SRAM_DCACHE_TAG 
    // -config_rtl=SIM_FPGA_SYN_SRAM_LSU_DCACHE 
    // -config_rtl=SIM_FPGA_SYN_SRAM_RF16X160 
    // -config_rtl=SIM_FPGA_SYN_SRAM_RF32X80

    // -config_l1i_size=4096        // not heavily tested
    // -config_l1i_size=8192        // failing ASI tests that accesses L1I tags
    -config_l1i_size=16384       // default
    -config_l1i_associativity=4     // default

    // -config_l1d_size=4096
    -config_l1d_size=8192           // default
    -config_l1d_associativity=4     // default

    -config_l15_size=8192           // default
    -config_l15_associativity=4     // default

    -config_l2_size=65536           // default
    -config_l2_associativity=4      // default

    -env_base=$DV_ROOT/verif/env/cmp
    -rtl_timeout=50000
    -sim_run_args=+spc_pipe=0
    -sim_run_args=+doerrorfinish
    -sim_run_args=+dowarningfinish
    -sim_run_args=+cpu_num=0
    // -vcs_build_args=+notimingcheck
    -vcs_build_args=+nospecify
    //-vcs_build_args=+nbaopt
    -vcs_build_args=-Xstrict=1 -notice
    -vcs_build_args=-P $DV_ROOT/tools/pli/iop/bwioj.tab // needed for fake_l2
    -vcs_build_args=-P $DV_ROOT/tools/pli/socket/bwsocket_pli.tab
    -vcs_build_args=-P $DV_ROOT/tools/pli/mem/bwmem_pli.tab
    -vcs_build_args=-P $DV_ROOT/tools/pli/utility/bwutility_pli.tab
    -vcs_build_args=-lsocket_pli -lutility_pli -liob -lmem_pli
    -vcs_use_rad
    -post_process_cmd="regreport -1 > status.log"
    -post_process_cmd="perf > perf.log"
    -asm_diag_root=$DV_ROOT/verif/diag
    -sjm_diag_root=$DV_ROOT/verif/diag
    -image_diag_root=$DV_ROOT/verif/diag
    -midas_args=-mmu=niagara
    -sim_run_args=+wait_cycle_to_kill=10
    -vcs_cm_args=line+tgl+cond+branch+fsm
</manycore>
